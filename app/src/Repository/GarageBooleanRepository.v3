<?php

namespace App\Repository;

use App\Entity\GarageBoolean;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @extends ServiceEntityRepository<GarageBoolean>
 */
class GarageBooleanRepository extends ServiceEntityRepository
{
    /**
     * Retourne la liste des voitures filtrÃ©e par Class
     *
     * @param string $class
     * @param array $condition
     * @return array
     */
    public function getCarsByClass(string $class, array $condition): array
    {
        extract($condition);
        $v = ($value === false) ? 0 : 1;
        $qb = $this->createQueryBuilder('gb')
            ->addselect('gb.locked')
            ->addselect('gb.fullBlueprint')
            ->addselect('gb.gold')
            ->addselect('gb.toUnlock')
            ->addselect('gb.toUpgrade')
            ->addselect('gb.toGold')
            // JOIN Garage
            ->leftJoin('gb.garage', 'g')
            ->addSelect('g.id as id')
            ->addSelect('g.gameUpdate')
            ->addSelect('g.carOrder')
            ->addSelect('g.level')
            ->addSelect('g.epic')
            ->addSelect('g.model')
            ->addSelect('g.slug as slug')
            // JOIN SettingBrand
            ->leftJoin('g.settingBrand', 'sb')
            ->addSelect('sb.name AS brand')
            // JOIN settingClass
            ->leftJoin('g.settingClass', 'sc')
            ->addSelect('sc.value AS classValue')
            // WHERE
            ->andWhere('sc.value = :class')
            ->setParameter('class', $class)
            ->andWhere('gb.' . $where . ' = ' . $v)
            // ORDER
            ->orderBy('g.carOrder', 'ASC')
            // GROUP BY
            ->groupBy('gb.id')
        ;

        return $qb->getQuery()->getArrayResult();
    }
}
